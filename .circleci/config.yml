version: 2.1

orbs:
  ruby: circleci/ruby@1.8.0
  node: circleci/node@2

jobs:
  test-cluster:
    docker: 
      - image: cimg/base:2021.11
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: test_db
    resource_class: brianoh1979/brian-containeragent2
    
    steps:
      - checkout
      - ruby/install:
          version: '2.7.4'
      - run: echo "Ruby 2.7.4 has been installed"
      - run: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
      - run: gem install rake
      - run: bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      - run: sudo apt install -y postgresql-client || true

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

 #     - run:
 #         name: Database Setup
 #         command: |
 #           bundle exec rake db:create
 #           bundle exec rake db:structure:load
      - run: rake db:create && rake db:migrate
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rails db:schema:load --trace
      - run:
          name: Parallel RSpec
          command: bin/rails test

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results

workflows:
  deployment:
    jobs:
      - test-cluster
