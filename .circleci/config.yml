version: 2.1

jobs:
 build:
   docker:
     - image: cimg/base:2021.11
   steps:
     - run: echo "Hi I'm on a CircleCIs hosted compute!"
 
 test:
   docker:
     - image: cimg/base:2021.11
   steps:
     - run: echo "Hi I'm on a CircleCIs hosted compute!"
 
 deploy-to-eks:
   docker:
     - image: cimg/base:2021.11
   resource_class: db-cci-ns/terraform-module
   steps:
     - run:  echo "Hi I'm on a container runner!"
  
 deploy-to-ecs:
   docker:
     - image: cimg/base:2021.11
   resource_class: db-cci-ns/terraform-module
   steps:
     - run:  echo "Hi I'm on a container runner!"

 internal-security-scan:
   docker:
     - image: cimg/base:2021.11
   resource_class: db-cci-ns/terraform-module
   steps:
     - run:  echo "Hi I'm on a container runner!"

 module-a:
    docker:
      - image: 'cimg/ruby:2.7.4-node'
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - docker/check
      - docker/build:
          image: brianoh1979/circleci-demo-docker3
      - docker/push:
          image: brianoh1979/circleci-demo-docker3
      - snyk/scan:
           docker-image-name: '$IMAGE_NAME:latest'
           fail-on-issues: false
           monitor-on-build: false
           project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-container'
           severity-threshold: high
           target-file: Dockerfile
           token-variable: SNYK_TOKEN 

orbs:
  path-filtering: circleci/path-filtering@0.1.1
  ruby: circleci/ruby@1.1.4
  node: circleci/node@2
  heroku: circleci/heroku@1.2.6
  cypress: cypress-io/cypress@1.29.0
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@1.2.3
  slack: circleci/slack@4.10.1

workflows:
 main-workflow:
   jobs:
    - module-a
    - build
    - test:
        requires:
         - build
    - internal-security-scan:
        requires:
         - test
    - deploy-to-eks:
        requires:
         - internal-security-scan
    - deploy-to-ecs:
        requires:
         - internal-security-scan

